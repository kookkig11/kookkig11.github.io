{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\n/**\n * A component to group content inside a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-section.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst DrawerSection = ({\n  children,\n  title,\n  theme,\n  style,\n  ...rest\n}) => {\n  const {\n    colors,\n    fonts\n  } = theme;\n  const titleColor = color(colors.text).alpha(0.54).rgb().string();\n  const font = fonts.medium;\n  return /*#__PURE__*/React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest), title && /*#__PURE__*/React.createElement(View, {\n    style: styles.titleContainer\n  }, /*#__PURE__*/React.createElement(Text, {\n    numberOfLines: 1,\n    style: [{\n      color: titleColor,\n      ...font\n    }, styles.title]\n  }, title)), children, /*#__PURE__*/React.createElement(Divider, {\n    style: styles.divider\n  }));\n};\n\nDrawerSection.displayName = 'Drawer.Section';\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  title: {\n    marginLeft: 16\n  },\n  divider: {\n    marginTop: 4\n  }\n});\nexport default withTheme(DrawerSection);","map":{"version":3,"sources":["DrawerSection.tsx"],"names":["DrawerSection","rest","fonts","titleColor","color","colors","font","styles","title","titleContainer","divider","container","marginBottom","height","justifyContent","marginLeft","marginTop","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,IAAA,EAAA,UAAA,QAAA,cAAA;AACA,OAAA,IAAA,MAAA,oBAAA;AACA,OAAA,OAAA,MAAA,YAAA;AACA,SAAA,SAAA,QAAA,oBAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,aAAa,GAAG,CAAC;AAAA,EAAA,QAAA;AAAA,EAAA,KAAA;AAAA,EAAA,KAAA;AAAA,EAAA,KAAA;AAAiC,KAAGC;AAApC,CAAD,KAAuD;AAC3E,QAAM;AAAA,IAAA,MAAA;AAAUC,IAAAA;AAAV,MAAN,KAAA;AACA,QAAMC,UAAU,GAAGC,KAAK,CAACC,MAAM,CAAZD,IAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAnB,MAAmBA,EAAnB;AACA,QAAME,IAAI,GAAGJ,KAAK,CAAlB,MAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAM,IAAA,KAAK,EAAE,CAACK,MAAM,CAAP,SAAA,EAAA,KAAA;AAAb,GAAA,EAAA,IAAA,CAAA,EACGC,KAAK,IAAA,aACJ,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,IAAA,aAAa,EADf,CAAA;AAEE,IAAA,KAAK,EAAE,CAAC;AAAEL,MAAAA,KAAK,EAAP,UAAA;AAAqB,SAAGE;AAAxB,KAAD,EAAiCC,MAAM,CAAvC,KAAA;AAFT,GAAA,EAHN,KAGM,CADF,CAFJ,EAAA,QAAA,EAAA,aAYE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAS,IAAA,KAAK,EAAEA,MAAM,CAACG;AAAvB,GAAA,CAZF,CADF;AALF,CAAA;;AAuBAV,aAAa,CAAbA,WAAAA,GAAAA,gBAAAA;AAEA,MAAMO,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BI,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE;AADL,GADoB;AAI/BH,EAAAA,cAAc,EAAE;AACdI,IAAAA,MAAM,EADQ,EAAA;AAEdC,IAAAA,cAAc,EAAE;AAFF,GAJe;AAQ/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,UAAU,EAAE;AADP,GARwB;AAW/BL,EAAAA,OAAO,EAAE;AACPM,IAAAA,SAAS,EAAE;AADJ;AAXsB,CAAlB,CAAf;AAgBA,eAAeC,SAAS,CAAxB,aAAwB,CAAxB","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-section.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerSection = ({ children, title, theme, style, ...rest }: Props) => {\n  const { colors, fonts } = theme;\n  const titleColor = color(colors.text).alpha(0.54).rgb().string();\n  const font = fonts.medium;\n\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {title && (\n        <View style={styles.titleContainer}>\n          <Text\n            numberOfLines={1}\n            style={[{ color: titleColor, ...font }, styles.title]}\n          >\n            {title}\n          </Text>\n        </View>\n      )}\n      {children}\n      <Divider style={styles.divider} />\n    </View>\n  );\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  title: {\n    marginLeft: 16,\n  },\n  divider: {\n    marginTop: 4,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"module"}