{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\n\nconst ListSubheader = ({\n  style,\n  theme,\n  ...rest\n}) => {\n  const {\n    colors,\n    fonts\n  } = theme;\n  const font = fonts.medium;\n  const textColor = color(colors.text).alpha(0.54).rgb().string();\n  return /*#__PURE__*/React.createElement(Text, _extends({\n    numberOfLines: 1\n  }, rest, {\n    style: [styles.container, {\n      color: textColor,\n      ...font\n    }, style]\n  }));\n};\n\nListSubheader.displayName = 'List.Subheader';\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13\n  }\n});\nexport default withTheme(ListSubheader);","map":{"version":3,"sources":["ListSubheader.tsx"],"names":["ListSubheader","rest","fonts","font","textColor","color","colors","styles","container","paddingHorizontal","paddingVertical","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,QAAA,cAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,IAAA,MAAA,oBAAA;AACA,SAAA,SAAA,QAAA,oBAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,aAAa,GAAG,CAAC;AAAA,EAAA,KAAA;AAAA,EAAA,KAAA;AAAgB,KAAGC;AAAnB,CAAD,KAAsC;AAC1D,QAAM;AAAA,IAAA,MAAA;AAAUC,IAAAA;AAAV,MAAN,KAAA;AACA,QAAMC,IAAI,GAAGD,KAAK,CAAlB,MAAA;AACA,QAAME,SAAS,GAAGC,KAAK,CAACC,MAAM,CAAZD,IAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAlB,MAAkBA,EAAlB;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,IAAA,aAAa,EAAE;AADjB,GAAA,EAAA,IAAA,EAAA;AAGE,IAAA,KAAK,EAAE,CAACE,MAAM,CAAP,SAAA,EAAmB;AAAEF,MAAAA,KAAK,EAAP,SAAA;AAAoB,SAAGF;AAAvB,KAAnB,EAAA,KAAA;AAHT,GAAA,CAAA,CADF;AALF,CAAA;;AAcAH,aAAa,CAAbA,WAAAA,GAAAA,gBAAAA;AAEA,MAAMO,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,iBAAiB,EADR,EAAA;AAETC,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf;AAOA,eAAeC,SAAS,CAAxB,aAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\nconst ListSubheader = ({ style, theme, ...rest }: Props) => {\n  const { colors, fonts } = theme;\n  const font = fonts.medium;\n  const textColor = color(colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <Text\n      numberOfLines={1}\n      {...rest}\n      style={[styles.container, { color: textColor, ...font }, style]}\n    />\n  );\n};\n\nListSubheader.displayName = 'List.Subheader';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default withTheme(ListSubheader);\n"]},"metadata":{},"sourceType":"module"}