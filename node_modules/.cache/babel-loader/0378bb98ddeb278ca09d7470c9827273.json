{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleSheet } from 'react-native';\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\nconst StyledText = ({\n  theme,\n  alpha,\n  family,\n  style,\n  ...rest\n}) => {\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n  return /*#__PURE__*/React.createElement(Text, _extends({}, rest, {\n    style: [styles.text, {\n      color: textColor,\n      ...font,\n      writingDirection\n    }, style]\n  }));\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default withTheme(StyledText);","map":{"version":3,"sources":["StyledText.tsx"],"names":["StyledText","rest","textColor","color","theme","font","writingDirection","I18nManager","styles","text","textAlign","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,WAAA,EAAA,UAAA,QAAA,cAAA;AAEA,OAAA,IAAA,MAAA,QAAA;AACA,SAAA,SAAA,QAAA,oBAAA;;AASA,MAAMA,UAAU,GAAG,CAAC;AAAA,EAAA,KAAA;AAAA,EAAA,KAAA;AAAA,EAAA,MAAA;AAAA,EAAA,KAAA;AAA+B,KAAGC;AAAlC,CAAD,KAAqD;AACtE,QAAMC,SAAS,GAAGC,KAAK,CAACC,KAAK,CAALA,MAAAA,CAAND,IAAK,CAALA,CAAAA,KAAAA,CAAAA,KAAAA,EAAAA,GAAAA,GAAlB,MAAkBA,EAAlB;AACA,QAAME,IAAI,GAAGD,KAAK,CAALA,KAAAA,CAAb,MAAaA,CAAb;AACA,QAAME,gBAAgB,GAAGC,WAAW,CAAXA,KAAAA,GAAAA,KAAAA,GAAzB,KAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAAE,CACLC,MAAM,CADD,IAAA,EAEL;AAAEL,MAAAA,KAAK,EAAP,SAAA;AAAoB,SAApB,IAAA;AAA6BG,MAAAA;AAA7B,KAFK,EAAA,KAAA;AAFT,GAAA,CAAA,CADF;AALF,CAAA;;AAiBA,MAAME,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AADyB,CAAlB,CAAf;AAMA,eAAeC,SAAS,CAAxB,UAAwB,CAAxB","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleProp, TextStyle, StyleSheet } from 'react-native';\n\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme: ReactNativePaper.Theme;\n};\n\nconst StyledText = ({ theme, alpha, family, style, ...rest }: Props) => {\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        styles.text,\n        { color: textColor, ...font, writingDirection },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(StyledText);\n"]},"metadata":{},"sourceType":"module"}