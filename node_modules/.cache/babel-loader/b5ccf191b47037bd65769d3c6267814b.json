{"ast":null,"code":"import * as React from 'react';\nexport const ToggleButtonGroupContext = /*#__PURE__*/React.createContext(null);\n/**\n * Toggle group allows to control a group of toggle buttons.</br>\n * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, check out <a href=\"toggle-button-row.html\">`ToggleButton.Row`</a>.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/toggle-button-group.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ToggleButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('left');\n *\n *   return (\n *     <ToggleButton.Group\n *       onValueChange={value => setValue(value)}\n *       value={value}>\n *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *     </ToggleButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\n\nconst ToggleButtonGroup = ({\n  value,\n  onValueChange,\n  children\n}) => /*#__PURE__*/React.createElement(ToggleButtonGroupContext.Provider, {\n  value: {\n    value,\n    onValueChange\n  }\n}, children);\n\nToggleButtonGroup.displayName = 'ToggleButton.Group';\nexport default ToggleButtonGroup; // @component-docs ignore-next-line\n\nexport { ToggleButtonGroup };","map":{"version":3,"sources":["ToggleButtonGroup.tsx"],"names":["ToggleButtonGroupContext","React","ToggleButtonGroup","children","onValueChange"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAsBA,OAAO,MAAMA,wBAAwB,GAAA,aAAGC,KAAK,CAALA,aAAAA,CAAjC,IAAiCA,CAAjC;AAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,iBAAiB,GAAG,CAAC;AAAA,EAAA,KAAA;AAAA,EAAA,aAAA;AAAwBC,EAAAA;AAAxB,CAAD,KAAA,aACxB,KAAA,CAAA,aAAA,CAAC,wBAAD,CAAA,QAAA,EAAA;AACE,EAAA,KAAK,EAAE;AAAA,IAAA,KAAA;AAELC,IAAAA;AAFK;AADT,CAAA,EADF,QACE,CADF;;AAWAF,iBAAiB,CAAjBA,WAAAA,GAAAA,oBAAAA;AAEA,eAAA,iBAAA,C,CAEA;;AACA,SAAA,iBAAA","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void | null;\n  /**\n   * Value of the currently selected toggle button.\n   */\n  value: string | null;\n  /**\n   * React elements containing toggle buttons.\n   */\n  children: React.ReactNode;\n};\n\ntype ToggleButtonContextType = {\n  value: string | null;\n  onValueChange: (item: string) => void | null;\n};\n\nexport const ToggleButtonGroupContext = React.createContext<\n  ToggleButtonContextType\n>(null as any);\n\n/**\n * Toggle group allows to control a group of toggle buttons.</br>\n * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, check out <a href=\"toggle-button-row.html\">`ToggleButton.Row`</a>.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/toggle-button-group.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ToggleButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('left');\n *\n *   return (\n *     <ToggleButton.Group\n *       onValueChange={value => setValue(value)}\n *       value={value}>\n *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *     </ToggleButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst ToggleButtonGroup = ({ value, onValueChange, children }: Props) => (\n  <ToggleButtonGroupContext.Provider\n    value={{\n      value,\n      onValueChange,\n    }}\n  >\n    {children}\n  </ToggleButtonGroupContext.Provider>\n);\n\nToggleButtonGroup.displayName = 'ToggleButton.Group';\n\nexport default ToggleButtonGroup;\n\n// @component-docs ignore-next-line\nexport { ToggleButtonGroup };\n"]},"metadata":{},"sourceType":"module"}