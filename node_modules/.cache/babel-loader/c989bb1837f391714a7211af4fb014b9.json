{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { Animated, StyleSheet, TouchableWithoutFeedback, View, I18nManager } from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  theme,\n  style,\n  numberOfLines = 1,\n  ...rest\n}) => {\n  const {\n    current: spinAnim\n  } = React.useRef(new Animated.Value(sortDirection === 'ascending' ? 0 : 1));\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n  }, [sortDirection, spinAnim]);\n  const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg']\n  });\n  const icon = sortDirection ? /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.icon, {\n      transform: [{\n        rotate: spin\n      }]\n    }]\n  }, /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    name: \"arrow-up\",\n    size: 16,\n    color: theme.colors.text,\n    direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n  })) : null;\n  return /*#__PURE__*/React.createElement(TouchableWithoutFeedback, _extends({\n    disabled: !onPress,\n    onPress: onPress\n  }, rest), /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, numeric && styles.right, style]\n  }, icon, /*#__PURE__*/React.createElement(Text, {\n    style: [styles.cell, sortDirection ? styles.sorted : {\n      color: textColor\n    }],\n    numberOfLines: numberOfLines\n  }, children)));\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center'\n  },\n  sorted: {\n    marginLeft: 8\n  },\n  icon: {\n    height: 24,\n    justifyContent: 'center'\n  }\n});\nexport default withTheme(DataTableTitle); // @component-docs ignore-next-line\n\nexport { DataTableTitle };","map":{"version":3,"sources":["DataTableTitle.tsx"],"names":["DataTableTitle","numberOfLines","rest","current","spinAnim","React","Animated","sortDirection","toValue","duration","useNativeDriver","textColor","color","theme","spin","inputRange","outputRange","icon","styles","transform","rotate","I18nManager","onPress","numeric","container","flex","flexDirection","alignContent","paddingVertical","right","justifyContent","cell","height","lineHeight","fontSize","fontWeight","alignItems","sorted","marginLeft","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  theme,\n  style,\n  numberOfLines = 1,\n  ...rest\n}: Props) => {\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={theme.colors.text}\n        direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n      <View style={[styles.container, numeric && styles.right, style]}>\n        {icon}\n\n        <Text\n          style={[\n            styles.cell,\n            sortDirection ? styles.sorted : { color: textColor },\n          ]}\n          numberOfLines={numberOfLines}\n        >\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]},"metadata":{},"sourceType":"module"}