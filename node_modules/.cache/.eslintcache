[{"/Users/kanitttha/comsci - year 4/covid-timeline/src/index.tsx":"1","/Users/kanitttha/comsci - year 4/covid-timeline/src/reportWebVitals.ts":"2","/Users/kanitttha/comsci - year 4/covid-timeline/src/App.tsx":"3","/Users/kanitttha/comsci - year 4/covid-timeline/src/component/timelineinput.tsx":"4","/Users/kanitttha/comsci - year 4/covid-timeline/src/component/patientsinput.tsx":"5","/Users/kanitttha/comsci - year 4/covid-timeline/src/useLocalStorage.tsx":"6","/Users/kanitttha/comsci - year 4/covid-timeline/src/component/timelineData.tsx":"7"},{"size":500,"mtime":1619438751949,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1619438751951,"results":"10","hashOfConfig":"9"},{"size":6139,"mtime":1620202898565,"results":"11","hashOfConfig":"9"},{"size":2792,"mtime":1619739221707,"results":"12","hashOfConfig":"9"},{"size":3081,"mtime":1619627670369,"results":"13","hashOfConfig":"9"},{"size":1287,"mtime":1619773635646,"results":"14","hashOfConfig":"9"},{"size":2459,"mtime":1620202471653,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"hwqftw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kanitttha/comsci - year 4/covid-timeline/src/index.tsx",[],["35","36"],"/Users/kanitttha/comsci - year 4/covid-timeline/src/reportWebVitals.ts",[],"/Users/kanitttha/comsci - year 4/covid-timeline/src/App.tsx",["37","38","39","40","41","42","43","44"],"import React from 'react';\nimport { StyleSheet, Text, Picker, TextInput, TouchableOpacity } from \"react-native\";\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport './App.css';\n// import PatientsInput from './component/patientsinput';\n// import TimelineInput from './component/timelineinput';\nimport TimelineData from './component/timelineData';\nimport UseLocalStorage from './useLocalStorage';\n\n\nfunction App() {\n  // input\n  const [age, onchangeAge] = React.useState('');\n  const [job, onchangeJob] = React.useState('');\n  const [gender, selectGender] = React.useState('');\n  var dateValue: Date = new Date();\n  const [description, onchangeDes] = React.useState('');\n\n  // refresh page\n  const [refreshing, setRefreshing] = React.useState(false);\n  const onRefresh = React.useCallback(() => {\n    setRefreshing(true);\n    setTimeout(function () {\n      setRefreshing(false)\n    }, 2000);\n  }, []);\n\n  function clickAddData(date: Date, description: string) {\n    let storage = new UseLocalStorage();\n\n    // patients from localStorage\n    if (gender == '') {\n      selectGender('ชาย');\n    }\n    let patients = {\n      gender: gender,\n      age: parseInt(age),\n      job: job,\n    }\n    storage.setPatients(patients);\n\n    // timeline from localStorage\n    let data: any = {};\n    let timelineList = [];\n    if (localStorage.getItem('covidData') != null) {\n      data = storage.getTimeline();\n\n      for (let key in data) {\n        let value = data[key];\n        if (value != \"\") {\n          timelineList.push(value);\n        }\n      }\n    }\n\n    // add new timeline data\n    var ddate, dmonth, dmin, a, b, c;\n    var x = date.getDate() / 10;\n    var y = date.getMonth() / 10;\n    var z = date.getMinutes() / 10;\n    a = x.toString();\n    b = y.toString();\n    c = z.toString();\n    if (parseInt(a) == 0) {\n      ddate = '0' + date.getDate();\n    } else {\n      ddate = date.getDate();\n    }\n    if (parseInt(b) == 0) {\n      dmonth = '0' + date.getMonth();\n    } else {\n      dmonth = date.getMonth();\n    }\n    if (parseInt(c) == 0) {\n      dmin = '0' + date.getMinutes();\n    } else {\n      dmin = date.getMinutes();\n    }\n    const newData = {\n      date: ddate + '/' + dmonth + '/' + date.getFullYear(),\n      time: date.getHours() + ':' + dmin,\n      description: description,\n    }\n    timelineList.push(newData);\n\n    // setLocalStorage\n    let covidData = { patients, timelineList };\n    storage.setTimeline(covidData);\n\n    onRefresh();\n  }\n\n  React.useEffect(() => {\n    let storage = new UseLocalStorage();\n    if (localStorage.getItem('patients') != '') {\n      onchangeAge(storage.getAge());\n      onchangeJob(storage.getJob());\n      selectGender(storage.getGender);\n    }\n  });\n\n  return (\n    <div className=\"App\" style={{ padding: 20 }} >\n      <Text style={styles.titletext}>COVID Timeline Genetator</Text>\n      <div className=\"App-page\" style={{ display: 'flex', flexDirection: 'row' }}>\n\n        <div className=\"inputData\" style={{ flex: '40%' }}>\n          {/* input patients */}\n          <div\n            className=\"inputpadding\"\n            style={{\n              padding: 10, paddingTop: 3, borderRadius: 5, margin: 10\n            }}>\n            <h1 style={{ color: '#27a742' }}>ข้อมูลผู้ป่วย</h1>\n\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n\n              <div style={{ flex: '50%', marginRight: 10 }}>\n                <h2>เพศ</h2>\n                <Picker\n                  selectedValue={gender}\n                  onValueChange={(itemValue, itemIndex) => selectGender(itemValue)}\n                  style={styles.picker}>\n                  <Picker.Item label=\"ชาย\" value=\"ชาย\" />\n                  <Picker.Item label=\"หญิง\" value=\"หญิง\" />\n                </Picker>\n              </div>\n\n              <div style={{ flex: '50%', marginLeft: 1 }}>\n                <h2>อายุ</h2>\n                <TextInput\n                  value={age}\n                  onChangeText={onchangeAge}\n                  keyboardType=\"numeric\"\n                  style={styles.textinput}\n                />\n              </div>\n\n            </div>\n\n            <h2>อาชีพ</h2>\n            <TextInput\n              value={job}\n              onChangeText={onchangeJob}\n              style={styles.textinput}\n            />\n          </div>\n\n          {/* timeline input */}\n          <div className=\"inputpadding\"\n            style={{\n              padding: 10, paddingTop: 3, borderRadius: 5, margin: 10\n            }}>\n            <h1 style={{ color: '#27a742' }}>ข้อมูลไทม์ไลน์</h1>\n\n            <h2>วันเวลา</h2>\n            <DateTimePickerComponent\n              style={{\n                fontFamily: 'Prompt',\n                backgroundColor: '#fff',\n                padding: 5\n              }}\n              value={dateValue}/>\n\n            <h2>รายละเอียด</h2>\n            <TextInput\n              value={description}\n              onChangeText={onchangeDes}\n              multiline\n              numberOfLines={4}\n              style={styles.textinput}\n            />\n\n            <TouchableOpacity\n              onPress={() => clickAddData(dateValue, description)}\n              style={styles.button}\n            >+ เพิ่มข้อมูล\n            </TouchableOpacity>\n          </div>\n        </div>\n\n        <TimelineData />\n      </div>\n    </div >\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    color: '#012d5e',\n    backgroundColor: '#ffc107',\n    padding: 5,\n    borderRadius: 5,\n    fontFamily: 'Prompt',\n    margin: 10\n  },\n\n  titletext: {\n    fontFamily: 'Prompt',\n    fontSize: 28,\n    color: '#ffc107',\n  },\n\n  boldtext: { fontWeight: 'bold' },\n\n  picker: {\n    fontFamily: 'Prompt',\n    fontSize: 16,\n    height: 40,\n    padding: 5,\n    borderRadius: 5,\n    width: '100%'\n  },\n\n  textinput: {\n    fontFamily: 'Prompt',\n    fontSize: 16,\n    height: 40,\n    width: '100%',\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: \"#fff\"\n  }\n});\n\nexport default App;","/Users/kanitttha/comsci - year 4/covid-timeline/src/component/timelineinput.tsx",["45"],"import React from 'react';\nimport { StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport '../App.css';\nimport UseLocalStorage from '../useLocalStorage';\n\nfunction TimelineInput() {\n    const dateValue: Date = new Date();\n    const [description, onchangeDes] = React.useState('');\n\n    function clickAddData(date: Date, description: string) {\n        let storage = new UseLocalStorage();\n\n        // patients from localStorage\n        let patients = storage.getPatients();\n\n        // timeline from localStorage\n        let data: any = {};\n        data = storage.getTimeline();\n        let timelineList = [];\n        for (let key in data) {\n            let value = data[key];\n            if (value != \"\") {\n                timelineList.push(value);\n            }\n        }\n\n        // add new timeline data\n        const newData = {\n            datetime: dateValue,\n            description: description,\n        }\n        timelineList.push(newData);\n\n        // setLocalStorage\n        let covidData = { patients, timelineList };\n        storage.setTimeline(covidData);\n    }\n\n    return (\n        <div className=\"inputpadding\"\n            style={{\n                padding: 10, paddingTop: 3, borderRadius: 5, margin: 10\n            }}>\n            <h1 style={{ color: '#27a742' }}>ข้อมูลไทม์ไลน์</h1>\n\n            <h2>วันเวลา</h2>\n            <DateTimePickerComponent\n                style={{\n                    fontFamily: 'Prompt',\n                    backgroundColor: '#fff',\n                    padding: 5\n                }}\n                value={dateValue} />\n\n            <h2>รายละเอียด</h2>\n            <TextInput\n                value={description}\n                onChangeText={onchangeDes}\n                multiline\n                numberOfLines={4}\n                style={styles.textinput}\n            />\n\n            <TouchableOpacity\n                onPress={() => clickAddData(dateValue, description)}\n                style={styles.button}\n            >+ เพิ่มข้อมูล\n            </TouchableOpacity>\n        </div>\n    );\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        alignItems: \"center\",\n        color: '#012d5e',\n        backgroundColor: '#ffc107',\n        padding: 5,\n        borderRadius: 5,\n        fontFamily: 'Prompt',\n        margin: 10\n    },\n\n    textinput: {\n        fontFamily: 'Prompt',\n        fontSize: 16,\n        height: 40,\n        width: '100%',\n        padding: 5,\n        borderRadius: 5,\n        backgroundColor: \"#fff\"\n    }\n});\n\nexport default TimelineInput;","/Users/kanitttha/comsci - year 4/covid-timeline/src/component/patientsinput.tsx",["46","47","48","49","50"],"import React from 'react';\nimport { StyleSheet, TextInput, TouchableOpacity, Picker } from \"react-native\";\nimport '../App.css';\nimport UseLocalStorage from '../useLocalStorage'\n\nfunction PatientsInput() {\n    const [age, onchangeAge] = React.useState('');\n    const [job, onchangeJob] = React.useState('');\n    const [gender, selectGender] = React.useState('');\n\n    function AddPatientsData(gender : string, age: string, job: string) {\n        let storage = new UseLocalStorage();\n        const patients = {\n            gender: gender,\n            age: parseInt(age),\n            job: job,\n        }\n        storage.setPatients(patients);\n    }\n\n    React.useEffect(() => {\n        if (age != '' && job != '' && gender != ''){\n            AddPatientsData(gender, age, job);\n        } else {\n            let storage = new UseLocalStorage();\n            onchangeAge(storage.getAge());\n            onchangeJob(storage.getJob());\n            selectGender(storage.getGender());\n        }\n    });\n\n    return (\n        <div\n            className=\"inputpadding\"\n            style={{\n                padding: 10, paddingTop: 3, borderRadius: 5, margin: 10\n            }}>\n            <h1 style={{ color: '#27a742' }}>ข้อมูลผู้ป่วย</h1>\n\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n\n                <div style={{ flex: '50%', marginRight: 10 }}>\n                    <h2>เพศ</h2>\n                    <Picker\n                        selectedValue={gender}\n                        onValueChange={(itemValue, itemIndex) => selectGender(itemValue)}\n                        style={styles.picker}>\n                        <Picker.Item label=\"ชาย\" value=\"ชาย\" />\n                        <Picker.Item label=\"หญิง\" value=\"หญิง\" />\n                    </Picker>\n                </div>\n\n                <div style={{ flex: '50%', marginLeft: 1 }}>\n                    <h2>อายุ</h2>\n                    <TextInput\n                        value={age}\n                        onChangeText={onchangeAge}\n                        keyboardType=\"numeric\"\n                        style={styles.textinput}\n                    />\n                </div>\n\n            </div>\n\n            <h2>อาชีพ</h2>\n            <TextInput\n                value={job}\n                onChangeText={onchangeJob}\n                style={styles.textinput}\n            />\n        </div>\n    );\n}\n\nconst styles = StyleSheet.create({\n    picker: {\n        fontFamily: 'Prompt',\n        fontSize: 16,\n        height: 40,\n        padding: 5,\n        borderRadius: 5,\n        width: '100%'\n    },\n\n    button: {\n        alignItems: \"center\",\n        color: '#012d5e',\n        backgroundColor: '#ffc107',\n        padding: 5,\n        borderRadius: 5,\n        fontFamily: 'Prompt',\n        margin: 10\n    },\n\n    textinput: {\n        fontFamily: 'Prompt',\n        fontSize: 16,\n        height: 40,\n        width: '100%',\n        padding: 5,\n        borderRadius: 5,\n        backgroundColor: \"#fff\"\n    }\n});\n\nexport default PatientsInput;\n","/Users/kanitttha/comsci - year 4/covid-timeline/src/useLocalStorage.tsx",["51","52"],"import { time } from 'node:console';\nimport React from 'react';\n\nexport default class UseLocalStorage {\n    setPatients(patients: object): void {\n        localStorage.setItem('patients', JSON.stringify(patients));\n    }\n\n    setTimeline(newTimeline: object): void {\n        // console.log(':: set Timeline');\n        localStorage.setItem('covidData', JSON.stringify(newTimeline));\n        // console.log(JSON.parse(localStorage.getItem('covidData')!));\n    }\n\n    getPatients(): object {\n        var patients = JSON.parse(localStorage.getItem('patients')!);\n        return patients;\n    }\n\n    getGender(): string {\n        var data = localStorage.getItem('patients');\n        var obj = JSON.parse(data!);\n        return obj.gender;\n    }\n\n    getAge(): string {\n        var data = localStorage.getItem('patients');\n        var obj = JSON.parse(data!);\n        return obj.age;\n    }\n\n    getJob(): string {\n        var data = localStorage.getItem('patients');\n        var obj = JSON.parse(data!);\n        return obj.job;\n    }\n\n    getTimeline(): object {\n        var timeline;\n        if (JSON.parse(localStorage.getItem('covidData')!).timelineList != null) {\n            timeline = JSON.parse(localStorage.getItem('covidData')!).timelineList;\n        }\n        return timeline;\n    }\n}","/Users/kanitttha/comsci - year 4/covid-timeline/src/component/timelineData.tsx",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":20,"column":10,"nodeType":"59","messageId":"60","endLine":20,"endColumn":20},{"ruleId":"61","severity":1,"message":"62","line":32,"column":16,"nodeType":"63","messageId":"64","endLine":32,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":50,"column":19,"nodeType":"63","messageId":"64","endLine":50,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":64,"column":21,"nodeType":"63","messageId":"64","endLine":64,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":69,"column":21,"nodeType":"63","messageId":"64","endLine":69,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":74,"column":21,"nodeType":"63","messageId":"64","endLine":74,"endColumn":23},{"ruleId":"66","severity":1,"message":"67","line":93,"column":3,"nodeType":"68","endLine":93,"endColumn":18,"suggestions":"69"},{"ruleId":"61","severity":1,"message":"65","line":95,"column":42,"nodeType":"63","messageId":"64","endLine":95,"endColumn":44},{"ruleId":"61","severity":1,"message":"65","line":23,"column":23,"nodeType":"63","messageId":"64","endLine":23,"endColumn":25},{"ruleId":"57","severity":1,"message":"70","line":2,"column":33,"nodeType":"59","messageId":"60","endLine":2,"endColumn":49},{"ruleId":"66","severity":1,"message":"71","line":21,"column":5,"nodeType":"68","endLine":21,"endColumn":20,"suggestions":"72"},{"ruleId":"61","severity":1,"message":"65","line":22,"column":17,"nodeType":"63","messageId":"64","endLine":22,"endColumn":19},{"ruleId":"61","severity":1,"message":"65","line":22,"column":30,"nodeType":"63","messageId":"64","endLine":22,"endColumn":32},{"ruleId":"61","severity":1,"message":"65","line":22,"column":46,"nodeType":"63","messageId":"64","endLine":22,"endColumn":48},{"ruleId":"57","severity":1,"message":"73","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":14},{"ruleId":"57","severity":1,"message":"74","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":13},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'refreshing' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'onchangeAge'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","MemberExpression",["77"],"'TouchableOpacity' is defined but never used.","React Hook useEffect contains a call to 'onchangeAge'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [age, job, gender] as a second argument to the useEffect Hook.",["78"],"'time' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Add dependencies array: []",{"range":"83","text":"84"},"Add dependencies array: [age, job, gender]",{"range":"85","text":"86"},[2723,2723],", []",[989,989],", [age, job, gender]"]