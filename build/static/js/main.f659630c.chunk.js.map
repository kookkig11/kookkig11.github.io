{"version":3,"sources":["useLocalStorage.tsx","component/timelineData.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UseLocalStorage","patients","localStorage","setItem","JSON","stringify","newTimeline","parse","getItem","data","gender","age","job","timeline","timelineList","styles","StyleSheet","create","button","alignItems","color","backgroundColor","padding","borderRadius","fontFamily","margin","titletext","fontSize","boldtext","fontWeight","TimelineData","items","storage","getGender","getAge","getJob","Object","entries","getTimeline","value","push","style","flex","borderColor","borderStyle","justifyContent","Text","View","map","obj","i","className","date","time","description","picker","height","width","textinput","App","React","useState","onchangeAge","onchangeJob","selectGender","dateValue","Date","onchangeDes","setRefreshing","onRefresh","useCallback","setTimeout","useEffect","display","flexDirection","paddingTop","marginRight","Picker","selectedValue","onValueChange","itemValue","itemIndex","Item","label","marginLeft","TextInput","onChangeText","keyboardType","multiline","numberOfLines","TouchableOpacity","onPress","parseInt","setPatients","ddate","dmonth","dmin","a","b","c","key","x","getDate","y","getMonth","z","getMinutes","toString","newData","getFullYear","getHours","covidData","setTimeline","clickAddData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f659630c.chunk.js","sourcesContent":["import { time } from 'node:console';\nimport React from 'react';\n\nexport default class UseLocalStorage {\n    setPatients(patients: object): void {\n        localStorage.setItem('patients', JSON.stringify(patients));\n    }\n\n    setTimeline(newTimeline: object): void {\n        // console.log(':: set Timeline');\n        localStorage.setItem('covidData', JSON.stringify(newTimeline));\n        // console.log(JSON.parse(localStorage.getItem('covidData')!));\n    }\n\n    getPatients(): object {\n        var patients = JSON.parse(localStorage.getItem('patients')!);\n        return patients;\n    }\n\n    getGender(): string {\n        var data = localStorage.getItem('patients');\n        var obj = JSON.parse(data!);\n        return obj.gender;\n    }\n\n    getAge(): string {\n        var data = localStorage.getItem('patients');\n        var obj = JSON.parse(data!);\n        return obj.age;\n    }\n\n    getJob(): string {\n        var data = localStorage.getItem('patients');\n        var obj = JSON.parse(data!);\n        return obj.job;\n    }\n\n    getTimeline(): object {\n        var timeline;\n        if (JSON.parse(localStorage.getItem('covidData')!).timelineList != null) {\n            timeline = JSON.parse(localStorage.getItem('covidData')!).timelineList;\n        }\n        return timeline;\n    }\n}","import React from 'react';\nimport { StyleSheet, Text, View } from \"react-native\";\nimport '../App.css';\nimport UseLocalStorage from '../useLocalStorage'\n\nfunction TimelineData() {\n    var items: any[] = [];\n\n    let storage = new UseLocalStorage();\n    var gender = storage.getGender();\n    var age = storage.getAge();\n    var job = storage.getJob();\n    if (localStorage.getItem('covidData') != null) {\n        for (const [, value] of Object.entries(storage.getTimeline())) {\n            items.push(value);\n        }\n        // items.reduce((prev, cur) => ({\n        //     ...prev,\n        //     [cur.date]: (prev[cur.date] || []).concat(cur)\n        // }), {});\n        // console.log(items);\n    }\n\n    return (\n        <div\n            style={{\n                flex: '60%',\n                borderColor: '#ffc107',\n                borderStyle: 'solid',\n                padding: 10,\n                margin: 10,\n                // width: '100%',\n                justifyContent: 'center',\n            }}>\n\n            <Text style={[styles.titletext, styles.boldtext,]}>Timeline</Text>\n\n            <View\n                style={[styles.button, { borderRadius: 100 }]}\n            >\n                <h1>ผู้ป่วย{gender} อายุ {age} ปี</h1>\n                <h2>อาชีพ {job}</h2>\n            </View>\n\n            {\n                items.map((obj, i: number) =>\n                    <View>\n                        <div className=\"timeline\">\n                            <div className=\"container\">\n                                <div className=\"content\">\n                                    <span>\n                                        <h2 style={{ color: '#ffc107' }}>{items[i].date} {items[i].time}</h2>\n                                        <h2>{items[i].description}</h2>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </View>\n                )\n            }\n        </div>\n    );\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        alignItems: \"center\",\n        color: '#012d5e',\n        backgroundColor: '#ffc107',\n        padding: 5,\n        borderRadius: 5,\n        fontFamily: 'Prompt',\n        margin: 10\n    },\n\n    titletext: {\n        fontFamily: 'Prompt',\n        fontSize: 28,\n        color: '#ffc107',\n    },\n\n    boldtext: { fontWeight: 'bold' },\n});\n\nexport default TimelineData;","import React from 'react';\nimport { StyleSheet, Text, Picker, TextInput, TouchableOpacity } from \"react-native\";\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport './App.css';\n// import PatientsInput from './component/patientsinput';\n// import TimelineInput from './component/timelineinput';\nimport TimelineData from './component/timelineData';\nimport UseLocalStorage from './useLocalStorage';\n\n\nfunction App() {\n  // input\n  const [age, onchangeAge] = React.useState('');\n  const [job, onchangeJob] = React.useState('');\n  const [gender, selectGender] = React.useState('');\n  var dateValue: Date = new Date();\n  const [description, onchangeDes] = React.useState('');\n\n  // refresh page\n  const [refreshing, setRefreshing] = React.useState(false);\n  const onRefresh = React.useCallback(() => {\n    setRefreshing(true);\n    setTimeout(function () {\n      setRefreshing(false)\n    }, 2000);\n  }, []);\n\n  function clickAddData(date: Date, description: string) {\n    let storage = new UseLocalStorage();\n\n    // patients from localStorage\n    if (gender == '') {\n      selectGender('ชาย');\n    }\n    let patients = {\n      gender: gender,\n      age: parseInt(age),\n      job: job,\n    }\n    storage.setPatients(patients);\n\n    // timeline from localStorage\n    let data: any = {};\n    let timelineList = [];\n    if (localStorage.getItem('covidData') != null) {\n      data = storage.getTimeline();\n\n      for (let key in data) {\n        let value = data[key];\n        if (value != \"\") {\n          timelineList.push(value);\n        }\n      }\n    }\n\n    // add new timeline data\n    var ddate, dmonth, dmin, a, b, c;\n    var x = date.getDate() / 10;\n    var y = date.getMonth() / 10;\n    var z = date.getMinutes() / 10;\n    a = x.toString();\n    b = y.toString();\n    c = z.toString();\n    if (parseInt(a) == 0) {\n      ddate = '0' + date.getDate();\n    } else {\n      ddate = date.getDate();\n    }\n    if (parseInt(b) == 0) {\n      dmonth = '0' + date.getMonth();\n    } else {\n      dmonth = date.getMonth();\n    }\n    if (parseInt(c) == 0) {\n      dmin = '0' + date.getMinutes();\n    } else {\n      dmin = date.getMinutes();\n    }\n    const newData = {\n      date: ddate + '/' + dmonth + '/' + date.getFullYear(),\n      time: date.getHours() + ':' + dmin,\n      description: description,\n    }\n    timelineList.push(newData);\n\n    // setLocalStorage\n    let covidData = { patients, timelineList };\n    storage.setTimeline(covidData);\n\n    onRefresh();\n  }\n\n  React.useEffect(() => {\n    let storage = new UseLocalStorage();\n    if (localStorage.getItem('patients') != '') {\n      onchangeAge(storage.getAge());\n      onchangeJob(storage.getJob());\n      selectGender(storage.getGender);\n    }\n  });\n\n  return (\n    <div className=\"App\" style={{ padding: 20 }} >\n      <Text style={styles.titletext}>COVID Timeline Genetator</Text>\n      <div className=\"App-page\" style={{ display: 'flex', flexDirection: 'row' }}>\n\n        <div className=\"inputData\" style={{ flex: '40%' }}>\n          {/* input patients */}\n          <div\n            className=\"inputpadding\"\n            style={{\n              padding: 10, paddingTop: 3, borderRadius: 5, margin: 10\n            }}>\n            <h1 style={{ color: '#27a742' }}>ข้อมูลผู้ป่วย</h1>\n\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n\n              <div style={{ flex: '50%', marginRight: 10 }}>\n                <h2>เพศ</h2>\n                <Picker\n                  selectedValue={gender}\n                  onValueChange={(itemValue, itemIndex) => selectGender(itemValue)}\n                  style={styles.picker}>\n                  <Picker.Item label=\"ชาย\" value=\"ชาย\" />\n                  <Picker.Item label=\"หญิง\" value=\"หญิง\" />\n                </Picker>\n              </div>\n\n              <div style={{ flex: '50%', marginLeft: 1 }}>\n                <h2>อายุ</h2>\n                <TextInput\n                  value={age}\n                  onChangeText={onchangeAge}\n                  keyboardType=\"numeric\"\n                  style={styles.textinput}\n                />\n              </div>\n\n            </div>\n\n            <h2>อาชีพ</h2>\n            <TextInput\n              value={job}\n              onChangeText={onchangeJob}\n              style={styles.textinput}\n            />\n          </div>\n\n          {/* timeline input */}\n          <div className=\"inputpadding\"\n            style={{\n              padding: 10, paddingTop: 3, borderRadius: 5, margin: 10\n            }}>\n            <h1 style={{ color: '#27a742' }}>ข้อมูลไทม์ไลน์</h1>\n\n            <h2>วันเวลา</h2>\n            <DateTimePickerComponent\n              style={{\n                fontFamily: 'Prompt',\n                backgroundColor: '#fff',\n                padding: 5\n              }}\n              value={dateValue}/>\n\n            <h2>รายละเอียด</h2>\n            <TextInput\n              value={description}\n              onChangeText={onchangeDes}\n              multiline\n              numberOfLines={4}\n              style={styles.textinput}\n            />\n\n            <TouchableOpacity\n              onPress={() => clickAddData(dateValue, description)}\n              style={styles.button}\n            >+ เพิ่มข้อมูล\n            </TouchableOpacity>\n          </div>\n        </div>\n\n        <TimelineData />\n      </div>\n    </div >\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    color: '#012d5e',\n    backgroundColor: '#ffc107',\n    padding: 5,\n    borderRadius: 5,\n    fontFamily: 'Prompt',\n    margin: 10\n  },\n\n  titletext: {\n    fontFamily: 'Prompt',\n    fontSize: 28,\n    color: '#ffc107',\n  },\n\n  boldtext: { fontWeight: 'bold' },\n\n  picker: {\n    fontFamily: 'Prompt',\n    fontSize: 16,\n    height: 40,\n    padding: 5,\n    borderRadius: 5,\n    width: '100%'\n  },\n\n  textinput: {\n    fontFamily: 'Prompt',\n    fontSize: 16,\n    height: 40,\n    width: '100%',\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: \"#fff\"\n  }\n});\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}